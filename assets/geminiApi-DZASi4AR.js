const c="key here",d="https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent";class p{async makeRequest(s,a="hi",e){try{const t={role:"system",parts:[{text:`You are an expert agricultural AI assistant helping Indian farmers. Always respond in ${a==="hi"?"Hindi":a==="ta"?"Tamil":"English"} language.

Provide practical, actionable advice for farming issues. Focus on:
- Crop diseases and pest management
- Fertilizer and nutrition recommendations  
- Weather-based farming advice
- Best practices for Indian agriculture
- Local solutions using easily available resources

Keep responses concise but comprehensive. Use simple language that farmers can understand.

Do not use markdown or any other formatting.

${e?`Context: ${e}`:""}`}]},n={contents:[{role:"user",parts:[{text:s}]}],system_instruction:t,generationConfig:{temperature:.7,topK:40,topP:.95,maxOutputTokens:1024}},o=await fetch(`${d}?key=${c}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(!o.ok)throw new Error(`API request failed: ${o.status}`);const i=await o.json();if(i.candidates&&i.candidates[0]?.content?.parts[0]?.text)return i.candidates[0].content.parts[0].text;throw new Error("No response from AI")}catch(t){throw console.error("Gemini API Error:",t),t}}async askQuestion(s,a="hi",e){const t=e?`User location: ${e}`:"";return this.makeRequest(s,a,t)}async processVoiceQuery(s,a="hi",e){const t=e?`User location: ${e}. This was spoken by voice.`:"This was spoken by voice.";return this.makeRequest(s,a,t)}async analyzeImage(s,a="hi",e){const t=e?`User location: ${e}. Provide detailed farming advice based on what you see in the image.`:"Provide detailed farming advice based on what you see in the image.",o={contents:[{role:"user",parts:[{text:"Please analyze this crop image and provide farming advice."},{inlineData:{mimeType:"image/jpeg",data:s}}]}],system_instruction:{role:"system",parts:[{text:t}]}},r=await(await fetch(`${d}?key=${c}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)})).json();if(r.candidates&&r.candidates[0]?.content?.parts[0]?.text)return r.candidates[0].content.parts[0].text;throw new Error("No response from AI (image)")}async getWeatherAdvice(s,a,e,t="hi",n){const o=`Today's weather: ${s}, Temperature: ${a}Â°C, Humidity: ${e}%. What farming activities should I do today? What should I avoid?`,i=n?`User location: ${n}`:"";return this.makeRequest(o,t,i)}async identifyPlantDisease(s,a,e="hi"){const t=`My ${a} crop shows these symptoms: ${s}. What disease is this and how to treat it?`;return this.makeRequest(t,e)}async getFertilizerAdvice(s,a,e,t="hi"){const n=`I'm growing ${s} in ${a} soil. The crop is in ${e} stage. What fertilizers should I use and when?`;return this.makeRequest(n,t)}}const h=new p;export{h as geminiApi};
